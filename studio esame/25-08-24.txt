//[ESAME] 7 luglio 2023 es2 #76
def majority_el(A: vettore di lunghezza n){
	if len(A) == 0{
		return null
	}
	if len(A) == 1{
		return A[0] 
	}
	if len(A) == 2
		if A[0] == A[1]{
			return A[0]
		}
		else{
			return null
		}
	m = len(A) // 2
	dx = majority_el(A[0:m-1])
	sx = majority_el(A[m:len(A)-1])
	count = 0
	if dx != null{
		for i in range(0,len(A)){
			if A[i] == dx{
				count ++
			}
		}
		if count > 2/3(len(A)){
			return dx
		}
	}
	count = 0
	if sx != null{
		for i in range(0,len(A)){
			if A[i] == sx{
				count ++
			}
		}
		if count > 2/3(len(A)){
			return sx
			}
}

def check(A: vettore di lunghezza n){
	if majority_el(A) == null{
		printf(no!)
	}
	else{
		printf(yes!)
	}
}
-----------------------------
//[ESAME] 12 gennaio 2023 es2 #72
def single(A){
	if len(A) == 0{
		return null
	}
	m = len(A) // 2
	if A[m] !=  A[m+1] and A[m] != A[m-1]{
		return A[m]
	}
	elif A[m] == A[m-1]{
		if m%2 == 1{
			return single(A[m+1,len(A)-1])
		}
		else{
			return single(A[0:m-1])
		}
	}
	elif A[m] == A[m+1]{
		if m%2 == 1{
			return single(A[m+1,len(A)-1])
		}
		else{
			return single(A[0:m-1])
		}
	}	
}
-----------------------------
[ESAME] 7 luglio 2023 es1 #75
def check(G): {
		
}